// Ink by ZURB
// zurb.com/ink/
// Licensed under MIT Open Source

@import 'global';

////
/// @group grid
////

/// Default number of columns for an email.
/// @type Number
$grid-column-count: 12 !default;

/// Default padding for the top of the wrapper.
/// @type Number
$wrapper-padding-top: 10px !default;

/// Default padding for the bottom of a column.
/// @type Number
$column-padding-bottom: 10px !default;

/// Default padding for the right of a sub-column.
/// @type Number
$sub-column-padding-right: $grid-column-gutter / 2 !default;

table {
  &.body {
    height: 100%;
    width: 100%;
  }

  &.container {
    width: $container-width;
    margin: 0 auto;
    text-align: inherit;
  }

  &.row {
    padding: 0;
    width: 100%;
    position: relative;
  }
}

table.container table.row {
  display: block;
}

//Begin new gutter!
td.columns,
td.column,
th.columns,
th.column {
  margin: 0 auto;
  padding-left: $grid-column-gutter;
}

td.columns.last,
td.column.last,
th.columns.last,
th.column.last {
  padding-right: $grid-column-gutter;
}

@for $i from 1 through $grid-column-count {
  td.large-#{$i},
  th.large-#{$i} {
    width: grid-calc-px($i, $grid-column-count, $container-width);
    padding-left: $grid-column-gutter / 2;
    padding-right: $grid-column-gutter / 2;
  }

  td.large-#{$i}.first,
  th.large-#{$i}.first {
    padding-left: $grid-column-gutter;
  }

  td.large-#{$i}.last,
  th.large-#{$i}.last {
    padding-right: $grid-column-gutter;
  }
  
  //Collapsed logic
  .collapse {
    td.large-#{$i},
    th.large-#{$i} {
      padding-right: 0;
      padding-left: 0;
      width: grid-calc-px($i, $grid-column-count, $container-width) + $grid-column-gutter;
    }
    
    //Gotta give it that extra love for the first and last columns.
    td.large-#{$i}.first,
    th.large-#{$i}.first,
    td.large-#{$i}.last,
    th.large-#{$i}.last {
      width: grid-calc-px($i, $grid-column-count, $container-width) + ($grid-column-gutter * 1.5);
    }
  }
}

@for $i from 1 through $grid-column-count {
  td.large-#{$i} center {
    min-width: grid-calc-px($i, $grid-column-count, $container-width);
  }
}

@for $i from 1 through $grid-column-count {
  .body .columns td.large-#{$i},
  .body .column td.large-#{$i},
  .body .columns th.large-#{$i},
  .body .column th.large-#{$i} {
    width: grid-calc-pct($i, $grid-column-count);
  }
}

@for $i from 1 through ($grid-column-count - 1) {
  td.large-offset-#{$i},
  th.large-offset-#{$i} {
    //1.5 takes in effect a whole empty cell.
    padding-left: grid-calc-px($i, $grid-column-count, $container-width) + 1.5 * $grid-column-gutter;
  }
}

td.expander,
th.expander {
  visibility: hidden;
  width: 0;
  padding: 0 !important;
}

// table.columns .text-pad,
// table.column .text-pad {
//   padding-left: $text-padding;
//   padding-right: $text-padding;
// }

// table.columns .left-text-pad,
// table.columns .text-pad-left,
// table.column .left-text-pad,
// table.column .text-pad-left {
//   padding-left: $text-padding;
// }

// table.columns .right-text-pad,
// table.columns .text-pad-right,
// table.column .right-text-pad,
// table.column .text-pad-right {
//   padding-right: $text-padding;
// }


