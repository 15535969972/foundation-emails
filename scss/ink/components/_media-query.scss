// Ink by ZURB
// zurb.com/ink/
// Licensed under MIT Open Source

@import 'global';

////
/// @group media-query
////

/// Default container width for small screens.
/// @type Number
$small-container-width: 95% !default;

/// Default small break point.
/// @type Number
$small-range: $container-width !default;

@media only screen and (max-width: #{$small-range}) {
  
table[class="body"] img {
  width: auto !important;
  height: auto !important;
}

table[class="body"] center {
  min-width: 0 !important;
}

table[class="body"] .container {
  width: $small-container-width !important;
}

//If it supports border-box, why not? Am I right?
//Also, by default padd that to the grid-column-gutter variable
table[class="body"] .columns,
table[class="body"] .column {
  height: auto !important;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding-left: $grid-column-gutter !important;
  padding-right: $grid-column-gutter !important;
}

//If it's collapsed make it so.
.collapse {
  table[class="body"] & .columns,
  table[class="body"] & .column {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

//Basic grid rules
@for $i from 1 through $grid-column-count {
  td.small-#{$i},
  th.small-#{$i} {
    display: inline-block !important;
    width: grid-calc-pct($i, $grid-column-count) !important;    
  }
}

//If it's the last column in column count (12 by default),
//give it block and 100% width to knock down the wimpy columns to their own row.
.columns td.small-#{$grid-column-count},
.column td.small-#{$grid-column-count},
.columns th.small-#{$grid-column-count},
.column th.small-#{$grid-column-count} {
  display: block !important;
  width: 100% !important;
}


//Rules for the Center Tag
@for $i from 1 through ($grid-column-count - 1) {
  .body .columns td.small-#{$i},
  .body .column td.small-#{$i},
  td.small-#{$i} center,

  .body .columns th.small-#{$i},
  .body .column th.small-#{$i},
  th.small-#{$i} center {
    display: inline-block !important;
    width: grid-calc-pct($i, $grid-column-count) !important;
  }
}

@for $i from 1 through ($grid-column-count - 1) {
  table[class="body"] td.small-offset-#{$i},
  table[class="body"] th.small-offset-#{$i} {
    //1.5 takes in effect a whole empty cell.
    margin-left: grid-calc-pct($i, $grid-column-count) !important;
  }
}

table[class="body"] table.columns td.expander,
table[class="body"] table.columns th.expander {
  display: none !important;
}

table[class="body"] .right-text-pad,
table[class="body"] .text-pad-right {
  padding-left: $text-padding !important;
}

table[class="body"] .left-text-pad,
table[class="body"] .text-pad-left {
  padding-right: $text-padding !important;
}

table[class="body"] .hide-for-small,
table[class="body"] .show-for-desktop {
  display: none !important;
}

table[class="body"] .show-for-small,
table[class="body"] .hide-for-desktop {
  display: inherit !important;
}

//menu
table.menu {
  td,
  th {
    width: auto !important;
    display: inline-block !important;
  }

  &.vertical {
    td,
    th {
      display: block !important;
    }
  }

}


}
